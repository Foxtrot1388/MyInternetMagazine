version: '3.8'
services:

  otel-collector:
    container_name: otel-collector
    image: otel/opentelemetry-collector-contrib
    volumes:
      - ./configs/otelconfig:/etc/otelcol-contrib
    ports:
      - "1888:1888" # pprof extension
      - "8888:8888" # Prometheus metrics exposed by the Collector
      - "8889:8889" # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP http receiver
      - "55679:55679" # zpages extension
    networks:
      - myinternetmagazine

  db_profile:
    container_name: pgdb_profile
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: Profile
    ports:
    - "5432:5432"
    networks:
    - myinternetmagazine

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    networks:
      - myinternetmagazine
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true

  profile:
    container_name: service_profile
    build:
      context: .
      dockerfile: ./Dockerfile
    restart: always
    networks:
    - myinternetmagazine
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_HOST: pgdb_profile
      POSTGRES_PORT: 5432
      SIGNING_KEY: example
      KAFKA_HOST: kafka
    ports:
    - "8081:8081"
    - "8082:8082"
    depends_on:
      - db_profile
      - kafka
      - otel-collector

networks:
  myinternetmagazine:
    driver: bridge