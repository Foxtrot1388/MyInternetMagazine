version: '3.8'
services:

  krakend:
    container_name: krakend
    image: devopsfaith/krakend:2.4.6
    restart: always
    volumes:
      - ./config:/etc/krakend
    networks:
      - myinternetmagazine
    ports:
      - "8080:8080"
    command: ["run","-d","-c","/etc/krakend/krakend.json"]

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    networks:
      - myinternetmagazine
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true

  sender:
    container_name: service_sender
    build:
      context: ./service-sender
      dockerfile: ./Dockerfile
    restart: always
    networks:
      - myinternetmagazine
    environment:
      KAFKA_HOST: kafka
      KAFKA_TOPIC_EMAIL: email
      SENDER_EMAIL:
      PASS_EMAIL:
      SMTP_AUTH_ADDRESS_EMAIL:
      SMTP_SERVER_EMAIL:
    depends_on:
      - kafka

  db_profile:
    container_name: pgdb_profile
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: Profile
    networks:
    - myinternetmagazine

  db_catalog:
    container_name: pgdb_catalog
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: Catalog
    networks:
    - myinternetmagazine

  redis_catalog:
    container_name: redisca_catalog
    image: redis:4.0-alpine
    command:
      - 'redis-server'
      - '--loglevel ${REDIS_LOGLEVEL:-warning}'
      - '--databases 2'
    networks:
    - myinternetmagazine

  pgadmin:
    container_name: pgadminmyinternetmagazine
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: test@example.com
      PGADMIN_DEFAULT_PASSWORD: root
    networks:
    - myinternetmagazine

  profile:
    container_name: service_profile
    build:
      context: ./service-profile
      dockerfile: ./Dockerfile
    restart: always
    networks:
    - myinternetmagazine
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_HOST: pgdb_profile
      POSTGRES_PORT: 5432
      SIGNING_KEY: example
    depends_on:
      - db_profile

  catalog:
    container_name: service_catalog
    build:
      context: ./service-catalog
      dockerfile: ./Dockerfile
    restart: always
    networks:
    - myinternetmagazine
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_HOST: pgdb_catalog
      POSTGRES_PORT: 5432
      REDIS_HOST: redisca_catalog
      REDIS_PORT: 6379
    depends_on:
      - db_catalog
      - redis_catalog

networks:
  myinternetmagazine:
    driver: bridge